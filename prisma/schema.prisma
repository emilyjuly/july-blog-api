// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  username  String    @unique
  password  String
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Comment   Comment[]
  Like      Like[]
  Posts     Post[]
}

model Post {
  id        Int       @id @default(autoincrement())
  caption   String?
  Photo     Photo     @relation(fields: [photoId], references: [id])
  photoId   Int       @unique
  User      User      @relation(fields: [userId], references: [id])
  userId    Int
  username  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Comments  Comment[]
  Likes     Like[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  Post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  User      User     @relation(fields: [userId], references: [id])
  userId    Int
  username  String
  createdAt DateTime @default(now())
}

model Photo {
  id       Int    @id @default(autoincrement())
  filename String
  mimetype String
  size     Int
  path     String
  post     Post?
}

model Like {
  id        Int      @id @default(autoincrement())
  User      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}
